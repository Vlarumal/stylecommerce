name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-build-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.0.x
    
    - name: Restore dependencies
      run: |
        cd backend/api
        dotnet restore
    
    - name: Build
      run: |
        cd backend/api
        dotnet build --no-restore
    
    - name: Run tests
      run: |
        cd backend/tests
        dotnet test --no-build --verbosity normal

  frontend-build-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 22
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    
    # - name: Run tests
    #   run: |
    #     cd frontend
    #     npm test
    
    - name: Build
      run: |
        cd frontend
        npm run build

  # docker-build-push:
  #   needs: [backend-build-test, frontend-build-test]
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
    
  #   steps:
  #   - uses: actions/checkout@v3
    
  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v2
    
  #   - name: Login to DockerHub
  #     uses: docker/login-action@v2
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}
    
  #   - name: Build and push backend
  #     uses: docker/build-push-action@v4
  #     with:
  #       context: ./backend/api
  #       push: true
  #       tags: ${{ secrets.DOCKERHUB_USERNAME }}/stylecommerce-api:latest
    
  #   - name: Build and push frontend
  #     uses: docker/build-push-action@v4
  #     with:
  #       context: ./frontend
  #       push: true
  #       tags: ${{ secrets.DOCKERHUB_USERNAME }}/stylecommerce-frontend:latest